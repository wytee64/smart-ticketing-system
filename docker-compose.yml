version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transport-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5


  kafka:
    image: confluentinc/cp-kafka:7.6.1       # <-- only ONE image line
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy            # <-- only ONE depends_on block
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M


  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"

  notification_service:
    build: ./notification_service
    container_name: notification_service
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    ports:
      - "9010:9010"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      DATABASE_NAME: transport
    networks:
      - transport-network
    restart: unless-stopped




  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "9006:9006"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/?authSource=admin
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  transport-network:
    driver: bridge


volumes:
  mongodb-data:
  ballerina-cache:
  