version: '3.8'

services:
  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transport-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: wytee
      MONGO_INITDB_ROOT_PASSWORD: cookingdsa
    volumes:
      - mongodb-data:/data/db
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Passenger Service
  passenger-service:
    build:
      context: ./passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    ports:
      - "9001:9001"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Transport Service
  transport-service:
    build:
      context: ./transport-service
      dockerfile: Dockerfile
    container_name: transport-service
    ports:
      - "9002:9002"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Ticketing Service
  ticketing-service:
    build:
      context: ./ticketing-service
      dockerfile: Dockerfile
    container_name: ticketing-service
    ports:
      - "9003:9003"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "9004:9004"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "9005:9005"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Admin Service
  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "9006:9006"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  transport-network:
    driver: bridge
    aliases:
      - kafka
      - mongodb
      - zookeeper

volumes:
  mongodb-data:
  ballerina-cache:
