version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: ["2181:2181"]

      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transport-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - transport-network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"

  notification_service:
    build: ./notification_service
    depends_on: [kafka]
    environment:
      kafkaBootstrapServers: "kafka:9092"
    ports:
      - "9010:9010"

      MONGO_INITDB_ROOT_USERNAME: wytee
      MONGO_INITDB_ROOT_PASSWORD: cookingdsa
    volumes:
      - mongodb-data:/data/db
    networks:
      - transport-network
    restart: unless-stopped

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL_HOST: "mongodb"
      MONGO_URL_PORT: 27017
      MONGO_DATABASE: "db"
      KAFKA_URL: "kafka:9092"
    networks:
      - transport-network
    volumes:
      - ballerina-cache:/app/target
    restart: unless-stopped

  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "9006:9006"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/?authSource=admin
      KAFKA_URL: "kafka:9092"
    networks:
      - transport-network
    volumes:
      - ballerina-cache:/app/target
    restart: unless-stopped

networks:
  transport-network:
    driver: bridge

volumes:
  mongodb-data:
  ballerina-cache:

passenger-service:
    build:
      context: ./passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    ports:
      - "9010:9010"
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URL: mongodb://wytee:cookingdsa@mongodb:27017/?authSource=admin
      KAFKA_URL: kafka:9092
    volumes:
      - ballerina-cache:/app/target
    networks:
      - transport-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  transport-network:
    driver: bridge


volumes:
  mongodb-data:
  ballerina-cache:


  
